CMAKE_MINIMUM_REQUIRED(VERSION 3.5)
project(point_to_frame CXX)

find_package(PCL 1.7 REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

FIND_PACKAGE(Eigen3 REQUIRED)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wall -Wextra -pedantic -g -march=native -std=c++17 -mavx -fopenmp")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fopenmp")

FIND_PACKAGE(OpenMP)
IF (OPENMP_FOUND)
    SET (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")

ENDIF()
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
    MESSAGE("OMG IM TESTING!")
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})

ADD_EXECUTABLE(point_to_plane_benchmark main.cpp)
TARGET_LINK_LIBRARIES(point_to_plane_benchmark ${PCL_LIBRARIES})
